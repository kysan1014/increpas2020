# day09

2차 배열
-> 1차 배열을 다시 배열로 관리하는 것

2차 배열을 만드는 방법

	1. 배열의 주소를 기억할 변수를 만든다.
		-> Heap 영역에 있는 데이터는 주소를 알아야 사용할 수 있기 때문
		
		방법 )
		
			데이터 타입[][] 변수이름;
			-> 즉, []를 하나만 쓰면 1차 배열을 관리하는 것이 되고
				[][] 두개를 사용하면 2차 배열을 관리하는 것이 된다
				
		예 )
		
			int [][] num;
			
	2. 1차 배열을 몇 개 관리할지 결정하고 1차 배열의 주소를 기억할 메모리를 만든다.
	
		방법 )
		
			num = new int[3][];
			-> 이것은 주소를 기억해야만 사용할 수 있으므로
			
	3. 실제 1차 배열을 만들어 준다.
	
		방법 )
		
			new 데이터 타입[개수];
			
		예 )
		
			num[0] = new int[5];
			<- 이것 역시 주소를 기억해야 사용할 수 있으므로..
			
		참고 )
		
			Heap type
			-> 그 주소가 가리키는 곳에 있는 데이터의 형태를 가리키는 말
			-> 같은 Heap Type끼리만 사용가능하다.
			-> 차원역시 같아야 한다.
			
				예 )
					
					int[][] no = new int[]; --- X
					
					int[] num = new int[5];
					-> Heap Type은 num이라는 변수의 주소가 가리키는 곳의 데이터 형태는 int 1차 배열이다

	참고 )
	
		2차 배열의 길이가 다른 1차배열을 넣을 수도 있다.
		int[][] no1 = new int[3][];
		int[] no2 = new int[3];
		int[] no3 = new int[10];
		no[0] = no2;
		no[0] = no3;
		
---------------------------------------------------------------------------------------------------------

자바 역시 C언어와 마찬가지로 사각형 형태의 배열도 만들 수 있다.

	형식 )
	
		데이터 타입[][] 변수이름 = new int[3][5];
		-> 3줄짜리 각 줄은 5칸짜리 사각형 모양의 배열


참고 )

	2차 배열도 초기화가 가능하다
	
	방법 )
	
		1차 배열의 경우
		int[] num = {};
		int[] num = new int[] {};
		
		2차 배열의 경우
		int[][] num = {{}, {}};
		int[][] num = new int[][] {{}, {}};

		-> 여기서도 배열의 개수를 지정할 수 없다.
			